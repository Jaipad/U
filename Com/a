%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

extern int yylex();
extern FILE *yyin;
void yyerror(const char *s, ...);

int yyparse();

%}

%union {
    char* string_val;
    int int_val;
}

%token INICIO FIN LEER ESCRIBIR SI ENTONCES IDENTIFICADOR NUMERO IGUAL MAS MENOS POR DIVIDIDO MENOR MAYOR IGUAL_COMP PAR_DER PAR_IZQ id texto cost

%%

programa: INICIO inst FIN;

inst: inst inst
    |inst_leer
    |inst_escribir
    |inst_si
    |inst_asig
    ;

inst_leer: LEER PAR_IZQ id PAR_DER { printf("Ingrese un valor para %s: ", $3); scanf("%d", &$3); }
    ;

inst_escribir: ESCRIBIR PAR_IZQ texto { printf("%s\n", $3); }
    | ESCRIBIR PAR_IZQ id { printf("%d\n", $3); }
    ;

inst_si: SI cond ENTONCES inst { if ($2) printf("Condición verdadera\n"); else printf("Condición falsa\n"); }
        ;

inst_asig: id IGUAL exp { $$ = $3; }
        ;

exp: cost
    |id
    |exp MAS exp { $$ = $1 + $3; }
    |exp MENOS exp { $$ = $1 - $3; }
    |exp POR exp { $$ = $1 * $3; }
    |exp DIVIDIDO exp { $$ = $1 / $3; }
    ;

cond: exp MENOR exp { $$ = $1 < $3; }
    |exp MAYOR exp { $$ = $1 > $3; }
    |exp IGUAL_COMP exp { $$ = $1 == $3; }
    ;

id: IDENTIFICADOR { $$ = $1; }
    ;

texto: TEXT { $$ = $1; }
    ;

cost: NUMERO { $$ = $1; }
    ;

%%

int main() {
    yyin = stdin;
    printf("Bienvenido al traductor AZ2023\n");
    yyparse();
    return 0;
}

void yyerror(const char *s, ...) {
    va_list args;
    va_start(args, s);

    fprintf(stderr, "Error: ");
    vfprintf(stderr, s, args);
    fprintf(stderr, "\n");

    va_end(args);
}
